workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID            # Execute jobs in merge request context
    - if: $CI_COMMIT_BRANCH == 'main'     # Execute jobs when a new commit is pushed to main branch

image: "rust:latest"

clippy:
  before_script:
    - rustup component add clippy
  script:
    - cargo clippy --verbose -- -Dwarnings

fmt:
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt -v -- --check

test:
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --verbose
    - cargo test --verbose
  except:
      # There is an equivalent job ('publish') that will run when code lands
      # on the 'main' branch, except it will upload a built binary. These are
      # kept separate to avoid accidentally uploading binaries when it's not
      # necessary.
    - main@virtio-fs/virtiofsd-rs

# This is identical to the 'test' job except it will upload a debug
# binary for people to consume and test without needing a Rust toolchain
# to build virtiofsd-rs.
#
# This only runs when code is merged to the 'main' branch.
publish:
  script:
    - cargo build --verbose
    - cargo test --verbose
  artifacts:
    name: "virtiofsd-rs-$CI_COMMIT_SHORT_SHA"
    paths:
      - target/debug/virtiofsd-rs
  only:
    - main@virtio-fs/virtiofsd-rs
